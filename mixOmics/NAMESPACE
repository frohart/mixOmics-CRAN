
import(MASS, lattice, igraph, rgl, pheatmap, ggplot2, ellipse)

importFrom("grDevices", "as.graphicsAnnot", "chull", "col2rgb",
             "colorRamp", "colorRampPalette", "colors", "dev.cur",
             "dev.new", "dev.off", "dev.prev", "dev.set",
             "devAskNewPage", "graphics.off", "gray", "gray.colors",
             "heat.colors", "rgb")

importFrom("graphics", "abline", "arrows", "axis", "barplot", "box",
             "image", "layout", "legend", "lines", "locator", "mtext",
             "par", "plot", "plot.default", "points", "polygon", "rect",
             "segments", "strheight", "strwidth", "symbols", "text",
             "title")

importFrom("stats", "as.dendrogram", "as.dist", "coefficients", "cor",
             "cov", "dist", "hclust", "lm", "lsfit", "median", "na.omit",
             "order.dendrogram", "predict", "quantile", "reorder", "var")

importFrom("utils", "setTxtProgressBar", "txtProgressBar")


export(
bin.color, 
color.jet,
color.GreenRed,
color.spectral,
color.mixo,
cov2,
cim, 
deflation,
defl.select,
ica.par,
ica.def,
image.tune.rcc, 
imgCor,
initsvd,
ipca,
loo,
l2.norm,
mat.rank, 
map,
Mfold,
miscrossprod,
multilevel,
nearZeroVar,
network,
nipals, 
pca,
pcasvd,
perf,
pheatmap.multilevel,
plotContrib,
plot3dIndiv, 
plot3dVar,
plotContrib,
plotIndiv, 
plotVar, 
pls,
plsda, 
rcc,
scale2,
scatterutil.base, 
scatterutil.eti, 
scatterutil.grid, 
selectVar,
sipca,
s.match,
soft_thresholding_L1,
soft.threshold,
sparsity,
spca,
spls,
splsda,
tau.estimate,
tune.multilevel,
tune.splsdalevel1,
tune.splsdalevel2,
tune.splslevel,
tune.pca,
tune.rcc,
unmap,
vip,
withinVariation,
wrapper.rgcca,
wrapper.sgcca,
wrapper.sgccda)

S3method(perf, pls)
S3method(perf, spls)
S3method(perf, plsda)
S3method(perf, splsda)

S3method(image, tune.rcc)

S3method(plot, perf)
S3method(plot, rcc)
S3method(plot, pca)

S3method(predict, pls)
S3method(predict, spls)
S3method(predict, plsda)
S3method(predict, splsda)

S3method(summary, pls)
S3method(summary, spls)
S3method(summary, rcc)

S3method(print, pls)
S3method(print, spls)
S3method(print, plsda)
S3method(print, splsda)
S3method(print, rcc)
S3method(print, summary)
S3method(print, pca)
S3method(print, spca)
S3method(print, ipca)
S3method(print, sipca)
S3method(print, sgcca)
S3method(print, rgcca)

S3method(plot3dIndiv, pls)
S3method(plot3dIndiv, spls)
S3method(plot3dIndiv, plsda)
S3method(plot3dIndiv, splsda)
S3method(plot3dIndiv, rcc)
S3method(plot3dIndiv, pca)
S3method(plot3dIndiv, ipca)
S3method(plot3dIndiv, sipca)

S3method(plot3dVar, pls)
S3method(plot3dVar, spls)
S3method(plot3dVar, rcc)
S3method(plot3dVar, pca)
S3method(plot3dVar, plsda)
S3method(plot3dVar, splsda)
S3method(plot3dVar, spca)
S3method(plot3dVar, ipca)
S3method(plot3dVar, sipca)

S3method(selectVar, pls)
S3method(selectVar, plsda)
S3method(selectVar, pca)
S3method(selectVar, spls)
S3method(selectVar, splsda)
S3method(selectVar, spca)
S3method(selectVar, sipca)
S3method(selectVar, sgcca)

S3method(network, default)
S3method(network, rcc)
S3method(network, pls)
S3method(network, spls)

S3method(pheatmap.multilevel, splsda1fact)
S3method(pheatmap.multilevel, splsda2fact)

