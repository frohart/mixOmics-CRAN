{\rtf1\ansi\ansicpg1252\cocoartf1265\cocoasubrtf210
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;\red102\green177\blue50;\red85\green142\blue40;\red63\green105\blue30;
}
\paperw11900\paperh16840\margl1440\margr1440\vieww20100\viewh14600\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\f0\fs24 \cf0 collaborateurs:\
presuppose: \
-avoir un compte bitbucket, et avoir un cle SSH (sinon google est votre ami, ou premier lien google:http://git-scm.com/book/tr/v2/Git-on-the-Server-Generating-Your-SSH-Public-Key)\
-se servir des lignes de commande (tout doit etre possible avec un logiciel mais entre "programmateurs", j'imagine que tout le monde sait ce que veut dire ligne de commande)\
\
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\b\fs28 \cf0 step1:\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\b0\fs24 \cf0 creer un repertoire sur la machine local dans lequel le repertoire mixOmics sera cree.\
Par exemple\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\i\b \cf0 mkdir gitFlo
\i0\b0 \
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\b\fs28 \cf0 step 2: Fork.\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\b0\fs24 \cf0 Sur https://bitbucket.org/ , dans le repository mixOmics, cliquer sur fork (menu a gauche) et ensuite "
\i\b Fork repository
\i0\b0 "\
Ceci copie mixOmics sur votre compte bitbucket personnel.\
\
\
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\b\fs28 \cf0 step3: clone\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\b0\fs24 \cf0 Sur https://bitbucket.org/, aller dans le repo mixOmics que vous venez de Forker, cliquer sur clone (menu a gauche), copier l'addresse qui doit etre de la forme:\
git clone git@bitbucket.org:votre_pseudo/mixomics.git\
\
Sur votre machine local, aller dans le repertoire local que vous avez creer (ici gitFlo/), et coller dans votre terminal 
\i\b git clone git@bitbucket.org:votre_pseudo/mixomics.git
\i0\b0 \
Ceci va copier le repertoire mixOmics qui est sur votre bitbucket vers votre machine local, avec les memes branches, tout pareil.\
Donc vous allez avoir une branche "master" et une branche "devel" (pour l'instant)\
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\b\fs28 \cf0 step3bis: ajouter le repertoire officiel dans votre liste de remote\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\b0 \cf0 aller dans le dossier mixOmics cree a la step3
\b \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\i\fs24 \cf0 git remote add upstream 
\i0 https://votre_pseudo_bitbucket@bitbucket.org/klecao/mixomics.git
\i \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\i0\b0 \cf0 \
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\b\fs28 \cf0 step4:comment changer de branche?\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\i\fs24 \cf0 git checkout master 
\i0\b0  -> switch to master\

\i\b git checkout devel -
\i0\b0 > switch to devel\
vous pouvez remarquer que les fichiers visibles sur votre machine changent quand vous changez de branche, s'il y a des differences entre les branches. \
\
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\b\fs28 \cf0 step5.1: comment creer une nouvelle branche?\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\i\fs24 \cf0 git checkout -b ma_nouvelle_branche la_branche_d_ou_je_veux_partir ATTENTION, NE PAS OUBLIER LA DERNIERE PARTIE
\i0\b0 \
\
par exemple: git checkout -b new_module 
\b devel
\b0 . Ceci copie la branche devel (\cf2 ce que l\'92on vous conseille: partir d\'92une version updated qui marche de devel\cf0 ) dans une nouvelle branche "new_module" et vous place dans la nouvelle branche\
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\b\fs28 \cf0 step5.2: comment organiser ma nouvelle branche?\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\b0\fs24 \cf2 Une fois la branche devel copi\'e9e, vous devriez avoir acces a toute la hi\'e9rarchie du package mixOmics, plus des repertoires appel\'e9s branche_testing.\
Tous les 
\b codes R source
\b0  doivent etre places dans 
\b mixOmics/R
\b0 \
De la meme mani\'e8re, tous les c
\b odes associes .Rd
\b0  doivent etre places dans 
\b mixOmics/man
\b0 \
(idem pour les rda si vous rajoutez des donnees .rda dans data/ et fichiers help associes).\
Pourquoi? comme ca les admin peuvent retester la compilation CRAN du package.\
Les 
\b fichiers .Rd sont importants
\b0  pour \'e9viter une charge de travail (deja assez lourde) lors de la phase de verification et compil des admin. \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\b \cf2 Mais ou mettre mes fichiers tests pour montrer ce que j\'92ai deja teste?
\b0 \
Vous cr\'e9erez un repertoire ma_branche_testing ou vous pourrez mettre vos scripts R.\

\b Pourquoi lorsque je copie ma branche de devel (au depart) je recois aussi un certain nb de repertoires appeles 
\b0 branches_testing?\
Ceci est pour montrer au autres contributeurs ce qui a deja ete fait et teste.\cf0 \
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\b\fs28 \cf0 step5.3: je ne veux pas forcement faire un commit de tout mon bazar, comment \'e9viter cela?\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\b0\fs24 \cf2 Le fichier .gitignore vous permettra de lister les repertoire qui ne doivent pas etre pris en compte lors du check status.\
Utilisez\
vi .gitignore \
puis ajoutez votre liste de repertoire a ne pas prendre en compte (pour ceux qui ne sont pas familie avec l\'92editeur vi, google est votre meilleur ami, en gros les commandes principales sont: i (pour insert), bouton echap (une fois l insertion faite) et \'91:wq\'92 pour sauver et quitter.\cf0 \
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\b\fs28 \cf0 step5: je suis perdue, ou suis-je?\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\i\fs24 \cf0 git status
\i0\b0 : vous donnera le nom de la branche ou vous etes, et les fichiers modifies compare a ce qui se trouve sur bitbucket\
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\b\fs28 \cf0 step6: modifier
\b0 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\fs24 \cf0 ne jamais modifier les fichiers sur master. toujours etre dans devel, ou mieux encore, avoir sa propre branche pour les choses importantes qui vont demander des tests.\
Vous pouvez modifier les fichiers (code/help files/etc) comme d'habitude avec votre editeur de texte prefere (par exple)\
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\b\fs28 \cf0 step7: envoyer les modifications sur bitbucket
\b0 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\fs24 \cf0 une fois que vous avez fait des modifications que vous voulez garder (il est conseille de sauvegarder sur git quand les codes fonctionnent),\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\i\b \cf0 git add name_of_the_file_you_want_to_send_to_bitbucket 
\i0\b0  (vous pouvez mettre plusieurs noms de fichiers a la suite, ou meme utilise git add * si vous avez toucher a bcp de choses)\

\i\b git commit -m "j'ai fait telles modifications sur tel fichier"
\i0\b0 \

\i\b git push -u origin le_nom_de_la_branche_sur_laquelle_vous_envoyez_les_modifications 
\b0 \cf3 le_meme_nom_de_branche
\i0 \cf0 \
par exemple, j'etais sur la branche new_module, j'ai modifie un fichier et a apres git add, git commit, je fais git push -u origin new_module \cf2 new_module\cf4 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural
\cf2 Ceci va permettre de faire une copie de votre branche sur votre bibucket local sur le bibucket admin. Une nouvelle branche new_module apparaitra dans le bitbucket admin, ce qui permettra aux admin de tester la branche avant de la merger sur devel\
Florian: dans ce cas on skip step 8?)\cf0 \
\
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\b\fs28 \cf0 step8: je suis content de moi, je veux en faire partager tout le monde\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\b0\fs24 \cf0 je cree une pull request.\
Sur le site bitbucket, dans votre repo mixOmics, le menu a gauche "
\i\b create pull request
\i0\b0 ", remplissez quelle branche vous voulez merger avec quelle branche.\
Ce sera genre votre_pseudo/mixomics  -> klecao/mixomics \
La plupart du temps ce sera ma_nouvelle_branche_ou_tout_marche vers devel, ou vers une autre branche (surtout pas master)\
\
entre la liste des gens du groupe dans "reviewers"\
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\b\fs28 \cf0 step9: maintenant on discute\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\b0\fs24 \cf0 une pull request demande a tout le monde de verifier le code avant de l'integrer a la branche demandee. ceci ouvre une conversation et permet a tout le monde de commenter jusqu'a ce que le consensus soit atteint et le code integre.\
\
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\b\fs28 \cf0 step10: se mettre a jour
\b0\fs24 \
il y a eu des modifications pendant mes vacances sur bitbucket, je veux me mettre a jour\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\i\b \cf0 git fetch upstream\
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\i0\b0 \cf0 si nouvelle branche "multilevel"
\i\b \
git  checkout multilevel			
\i0\b0 se mettre dans la nouvelle branche
\i\b \
git merge upstream/multilevel	
\i0\b0 mettre dans la nouvelle branche ce qu'il y a sur upstream
\i\b \
esc :wq (dans vim)				
\i0\b0 mettre ou pas de message dans le merge
\i\b \
git push -u origin multilevel		
\i0\b0 envoyer tout sur bitbucket
\i\b \
\
\
\

\i0\b0 Si des changements dans des branches que j'ai deja:\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\i\b \cf0 git checkout branche_ou_il_ya_des_chgts\
git merge upstream/branche_ou_il_ya_des_chgts\
git push -u origin branche_ou_il_ya_des_chgts
\i0\b0 \
\
\
Il peut y avoir des conflits a resoudre au moment du merge\
}